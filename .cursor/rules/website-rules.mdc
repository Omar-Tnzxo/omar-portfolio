---
description:
globs:
alwaysApply: false
---
## ðŸ§  Rules for AI â€“ Advanced AI Usage Instructions

---
### 0. Language Implementation for Multilingual Sites

- The default language for all websites and interfaces must always be **English**.
- Arabic must be **included as a secondary language** and supported equally across all pages.
- Every time you create a component, page, function, form, or content-related section:
  - **Implement it in both English and Arabic** from the start.
  - This ensures proper multilingual readiness and avoids delays or missing content.
- **Always include both `en.json` and `ar.json`** (or equivalent) when setting up localization files.
- If the current project is using a single language:
  - **Ask the user explicitly for permission** to start working on the Arabic version.
  - Once approved, implement the Arabic version with full **RTL (Right-To-Left) compatibility**.
- All layout direction, spacing, alignment, and typography must adapt correctly to RTL when the Arabic language is selected.
- Never delay the Arabic implementation assuming it will be added later â€” it should be part of the initial coding process.

---

### 1. Language & Context

- All responses **must be written in Arabic only**.
- The user does **not understand any other language**.
- Do not use English in any part of the conversation except for variable names, folder names, or code syntax if relevant.
- Always assume the user is working on a **Windows operating system**.
- Never reference or assume macOS, Linux, or any other development environment.

---

### 2. Code Quality Standards

- All generated code should be:
  - Free from syntax errors.
  - Clean and easy to understand.
  - Aligned with best practices of modern frontend development.
  - Modular, maintainable, and scalable.
- Avoid deprecated functions, outdated libraries, or experimental features unless explicitly requested.

---

### 3. UI/UX Guidelines

- The design must:
  - Be fully responsive across all screen sizes.
  - Follow modern design patterns suitable for 2025/2026.
  - Support both dark and light themes.
  - Be clean, minimalistic, and user-friendly.
  - Prioritize performance and accessibility.

- UI components should include:
  - Smooth transitions and animations.
  - Clearly defined padding, spacing, and layout grids.
  - Rounded corners (2xl preferred) and soft shadows for cards and buttons.
  - Consistent and logical color contrast for readability.

---

### 4. Code Structure & Practices

- Components must be:
  - Independent and reusable.
  - Named clearly and intuitively.
  - Placed in their appropriate structure.

- Use best coding practices:
  - Clear naming conventions.
  - Avoid code duplication.
  - Separate logic from UI wherever possible.

- Do not assume any folder or file structure. Wait for the user to request or define it.

---

### 5. Responses & Communication Style

- Responses must always be:
  - Precise.
  - Long-form.
  - Technically detailed.
  - Without emotional or overly friendly tone (unless requested).

- Do not make assumptions. If any detail is unclear, ask the user for clarification first.

- When explaining, break down complex logic into simple, well-organized steps.

- Highlight important points with bullet points or numbered lists if appropriate.

---

### 6. Branding & Business Alignment

- When designing or implementing branded elements:
  - Follow the userâ€™s branding instructions exactly.
  - Avoid improvising design or business decisions unless explicitly asked to.
  - Keep the UI and messaging consistent with modern digital branding trends.

- Avoid unnecessary or unrelated libraries unless they serve a direct purpose.

---

### 7. When in Doubt

- Do not generate content based on guesswork.
- Always ask the user for clarification before proceeding if there is any ambiguity.
- Check for any previous instructions or rules shared earlier in the conversation.

---

### âœ… Summary

- Prioritize Arabic language in all outputs.
- Respect the Windows environment setup.
- Write clean, maintainable, and error-free code.
- Focus on modern UI/UX suitable for production apps.
- Maintain a professional, structured, and factual tone at all times.
